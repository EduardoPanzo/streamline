// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         String   @id  @unique  @default(uuid())
  email      String   @unique
  name       String  
  password   String
  avatar_img String?
  
  projects  Project[]
  adminProject  AdminProject[]
  memberProject MemberProject[]
  holderTask HolderTask[]

  @@map("users")
}

model Project {
  id          String   @id      @unique @default(uuid())
  name        String
  description String
  color       String
  created_at  DateTime? @default(now())

  tasks Task[]
  adminProject  AdminProject[]
  memberProject MemberProject[]

  author User @relation(fields: [authorId], references: [id])
  authorId String

  @@map("projects")
}

model Task {
  id           String @id @unique @default(uuid())
  name         String
  description  String
  color        String
  status       String
  created_at   DateTime? @default(now())

  holderTask HolderTask[]

  project Project @relation(fields: [projectId], references: [id])
  projectId String

  @@map("tasks")
}

model AdminProject {
  id  String  @id @default(uuid())

  userId String
  user User @relation(fields: [userId], references: [id])

  projectId String
  project Project @relation(fields: [projectId], references: [id])

  @@map("adminsProjects")
}

model MemberProject {
  id String @id @default(uuid())

  userId String
  user User @relation(fields: [userId], references: [id])

  projectId String
  project Project @relation(fields: [projectId], references: [id])

  @@map("membersProjects")
}

model HolderTask {
  id String @id @default(uuid())

  userId String
  user User @relation(fields: [userId], references: [id])

  taskId String
  task Task @relation(fields: [taskId], references: [id])

  @@map("holdersTasks")
}